{
  "plugin_type": "analytics_integration",
  "name": "Time To Conversion Tracker V2",
  "form_schema": [
    {
      "default_value": "yes",
      "field_type": "dropdown",
      "name": "resettable",
      "label": "Resettable Timer",
      "options": {
        "choices": [
          {
            "value": "yes",
            "label": "Yes"
          },
          {
            "value": "no",
            "label": "No"
          }
        ]
      }
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "resettable_threshold",
      "label": "Resettable After Elapsed Time (sec)",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "start_at_evt",
      "label": "Start Timer At Event (api_name)",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "stop_at_evt",
      "label": "Stop Timer At Event (api_name)",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "elapsed_ttc_metric",
      "label": "Elapsed Time Metric (api_name)",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "max_ttc",
      "label": "Max Time to Conversion",
      "options": null
    },
    {
      "default_value": "",
      "field_type": "text",
      "name": "min_ttc",
      "label": "Min Time to Conversion",
      "options": null
    }
  ],
  "description": "",
  "options": {
    "track_layer_decision": "if(extension.start_at_evt && extension.stop_at_evt && extension.elapsed_ttc_metric) {\n  var ttc = window.optimizely.get(\"custom/ttc\"),\n      configOptions = {resettable:false};\n  \n  // configure resettable parameter\n\tvar resettableThreshold = parseFloat(extension.resettable_threshold),\n      resettable = extension.resettable === 'yes';\n  configOptions.resettable = resettableThreshold || resettable;\n  \n  // configure min/max\n  var min = parseFloat(extension.min_ttc),\n      max = parseFloat(extension.max_ttc);\n  if(min) configOptions.min = min;\n  if(max) configOptions.max = max;  \n  \n\tttc.bindTTCTracking(\n    extension.start_at_evt, \n    extension.stop_at_evt, \n\t\textension.elapsed_ttc_metric, \n    configOptions\n  );\n}"
  }
}